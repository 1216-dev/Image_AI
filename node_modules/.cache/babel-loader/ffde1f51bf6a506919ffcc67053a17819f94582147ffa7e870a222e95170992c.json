{"ast":null,"code":"var _jsxFileName = \"/Users/devshree/Documents/AI_Image/src/Components/imageGenerator/imageGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './imageGenerator.css'; // Assuming you have a CSS file\nimport default_image from '../Assets/default_image.svg'; // Default image path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGenerator = () => {\n  _s();\n  const [imageUrl, setImageUrl] = useState(default_image); // Use the default image initially\n  const inputRef = useRef(null); // Reference for input field\n\n  // Function to handle image generation\n  const imageGenerator = async () => {\n    const prompt = inputRef.current.value.trim(); // Get the prompt value\n\n    if (prompt === \"\") {\n      console.log(\"Input is empty.\");\n      return;\n    }\n    try {\n      // Calling the Django backend (running on localhost:8000)\n      const response = await fetch(\"http://localhost:8000/api/generate-image/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: prompt // Pass the prompt to the backend\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch image\");\n      }\n      const data = await response.json();\n      console.log(\"Response data:\", data);\n      setImageUrl(data.image_url); // Set the received image URL\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-image-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [\"AI Image \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgLoading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: \"Generated representation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Describe what you want to see?\",\n        ref: inputRef // Connect to input reference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"generate-btn\",\n        onClick: imageGenerator,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageGenerator, \"QjEbe9pZ5UNcLhpkkKIbroht99k=\");\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["React","useState","useRef","default_image","jsxDEV","_jsxDEV","ImageGenerator","_s","imageUrl","setImageUrl","inputRef","imageGenerator","prompt","current","value","trim","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","image_url","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/devshree/Documents/AI_Image/src/Components/imageGenerator/imageGenerator.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './imageGenerator.css'; // Assuming you have a CSS file\nimport default_image from '../Assets/default_image.svg'; // Default image path\n\nconst ImageGenerator = () => {\n    const [imageUrl, setImageUrl] = useState(default_image); // Use the default image initially\n    const inputRef = useRef(null); // Reference for input field\n\n    // Function to handle image generation\n    const imageGenerator = async () => {\n        const prompt = inputRef.current.value.trim(); // Get the prompt value\n\n        if (prompt === \"\") {\n            console.log(\"Input is empty.\");\n            return;\n        }\n\n        try {\n            // Calling the Django backend (running on localhost:8000)\n            const response = await fetch(\"http://localhost:8000/api/generate-image/\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    prompt: prompt, // Pass the prompt to the backend\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch image\");\n            }\n\n            const data = await response.json();\n            console.log(\"Response data:\", data);\n            setImageUrl(data.image_url); // Set the received image URL\n\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    };\n\n    return (\n        <div className='ai-image-generator'>\n            <div className='header'>AI Image <span>Generator</span></div>\n\n            <div className='imgLoading'>\n                <div className='image-loading'>\n                    <div className='image'>\n                        {/* Display the generated image or default image */}\n                        <img src={imageUrl} alt=\"Generated representation\" />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"search-box\">\n                <input\n                    type=\"text\"\n                    className='search-input'\n                    placeholder='Describe what you want to see?'\n                    ref={inputRef} // Connect to input reference\n                />\n                {/* Button to trigger the imageGenerator function */}\n                <button className=\"generate-btn\" onClick={imageGenerator}>Generate</button>\n            </div>\n        </div>\n    );\n};\n\nexport default ImageGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,sBAAsB,CAAC,CAAC;AAC/B,OAAOC,aAAa,MAAM,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAACE,aAAa,CAAC,CAAC,CAAC;EACzD,MAAMO,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE/B;EACA,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,MAAM,GAAGF,QAAQ,CAACG,OAAO,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE9C,IAAIH,MAAM,KAAK,EAAE,EAAE;MACfI,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9B;IACJ;IAEA,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBZ,MAAM,EAAEA,MAAM,CAAE;QACpB,CAAC;MACL,CAAC,CAAC;MAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEU,IAAI,CAAC;MACnClB,WAAW,CAACkB,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC;IAEjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZd,OAAO,CAACc,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAK0B,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/B3B,OAAA;MAAK0B,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,WAAS,eAAA3B,OAAA;QAAA2B,QAAA,EAAM;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE7D/B,OAAA;MAAK0B,SAAS,EAAC,YAAY;MAAAC,QAAA,eACvB3B,OAAA;QAAK0B,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC1B3B,OAAA;UAAK0B,SAAS,EAAC,OAAO;UAAAC,QAAA,eAElB3B,OAAA;YAAKgC,GAAG,EAAE7B,QAAS;YAAC8B,GAAG,EAAC;UAA0B;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEN/B,OAAA;MAAK0B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvB3B,OAAA;QACIkC,IAAI,EAAC,MAAM;QACXR,SAAS,EAAC,cAAc;QACxBS,WAAW,EAAC,gCAAgC;QAC5CC,GAAG,EAAE/B,QAAS,CAAC;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eAEF/B,OAAA;QAAQ0B,SAAS,EAAC,cAAc;QAACW,OAAO,EAAE/B,cAAe;QAAAqB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC7B,EAAA,CA/DID,cAAc;AAAAqC,EAAA,GAAdrC,cAAc;AAiEpB,eAAeA,cAAc;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}