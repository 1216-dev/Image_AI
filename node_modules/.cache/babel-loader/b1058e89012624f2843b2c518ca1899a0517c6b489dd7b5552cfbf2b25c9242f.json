{"ast":null,"code":"var _jsxFileName = \"/Users/devshree/Documents/AI_Image/src/Components/imageGenerator/imageGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './imageGenerator.css';\nimport default_image from '../Assets/default_image.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGenerator = () => {\n  _s();\n  const [imageUrl, setImageUrl] = useState(\"/\");\n  const inputRef = useRef(null);\n  const imageGenerator = async () => {\n    if (inputRef.current.value === \"\") {\n      return; // Exit if input is empty\n    }\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/images/generations\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer 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` // Replace with your actual OpenAI API key\n        },\n        body: JSON.stringify({\n          prompt: inputRef.current.value,\n          n: 1,\n          size: '512x512'\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      const dataArray = data.data;\n      if (dataArray && dataArray.length > 0) {\n        setImageUrl(dataArray[0].url);\n      } else {\n        console.error(\"No images returned from API\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching image:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-image-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [\"AI image \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgLoading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl === \"/\" ? default_image : imageUrl,\n            alt: \"Generated representation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Describe what you want to see?\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"generate-btn\",\n        onClick: imageGenerator,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageGenerator, \"/0TZwANWEaTh1o7h3XlWnJGqVdo=\");\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["React","useState","useRef","default_image","jsxDEV","_jsxDEV","ImageGenerator","_s","imageUrl","setImageUrl","inputRef","imageGenerator","current","value","response","fetch","method","headers","Authorization","body","JSON","stringify","prompt","n","size","ok","Error","data","json","dataArray","length","url","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/devshree/Documents/AI_Image/src/Components/imageGenerator/imageGenerator.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './imageGenerator.css';\nimport default_image from '../Assets/default_image.svg';\n\nconst ImageGenerator = () => {\n    const [imageUrl, setImageUrl] = useState(\"/\");\n    const inputRef = useRef(null);\n\n    const imageGenerator = async () => {\n        if (inputRef.current.value === \"\") {\n            return; // Exit if input is empty\n        }\n\n        try {\n            const response = await fetch(\"https://api.openai.com/v1/images/generations\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer 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`, // Replace with your actual OpenAI API key\n                },\n                body: JSON.stringify({\n                    prompt: inputRef.current.value,\n                    n: 1,\n                    size: '512x512',\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error(\"Network response was not ok\");\n            }\n\n            const data = await response.json();\n            const dataArray = data.data;\n\n            if (dataArray && dataArray.length > 0) {\n                setImageUrl(dataArray[0].url);\n            } else {\n                console.error(\"No images returned from API\");\n            }\n\n        } catch (error) {\n            console.error(\"Error fetching image:\", error);\n        }\n    };\n\n    return (\n        <div className='ai-image-generator'>\n            <div className='header'>AI image <span>Generator</span></div>\n            <div className='imgLoading'>\n                <div className='image-loading'>\n                    <div className='image'>\n                        <img src={imageUrl === \"/\" ? default_image : imageUrl} alt=\"Generated representation\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"search-box\">\n                <input\n                    type=\"text\"\n                    className='search-input'\n                    placeholder='Describe what you want to see?'\n                    ref={inputRef}\n                />\n                <button className=\"generate-btn\" onClick={imageGenerator}>Generate</button> {/* Changed div to button */}\n            </div>\n        </div>\n    );\n}\n\nexport default ImageGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}