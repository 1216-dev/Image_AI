{"ast":null,"code":"var _jsxFileName = \"/Users/devshree/Documents/AI_Image/src/Components/imageGenerator/imageGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './imageGenerator.css'; // Your styles here\nimport default_image from '../Assets/default_image.svg'; // Default image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGenerator = () => {\n  _s();\n  const [imageUrl, setImageUrl] = useState(default_image); // Set default image initially\n  const inputRef = useRef(null); // Reference to the input field\n\n  // Function to handle image generation using the new URL pattern\n  const imageGenerator = async () => {\n    const userPrompt = inputRef.current.value;\n    if (userPrompt === \"\") {\n      return; // Exit if input is empty\n    }\n\n    // Format the URL with the user's input\n    const generatedImageUrl = `https://image.pollinations.ai/prompt/${encodeURIComponent(userPrompt)}`;\n\n    // Set the image URL to the one generated by the external service\n    setImageUrl(generatedImageUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-image-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [\"AI Image \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgLoading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: \"Generated representation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Describe what you want to see\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"generate-btn\",\n        onClick: imageGenerator,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageGenerator, \"QjEbe9pZ5UNcLhpkkKIbroht99k=\");\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["React","useState","useRef","default_image","jsxDEV","_jsxDEV","ImageGenerator","_s","imageUrl","setImageUrl","inputRef","imageGenerator","userPrompt","current","value","generatedImageUrl","encodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/devshree/Documents/AI_Image/src/Components/imageGenerator/imageGenerator.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './imageGenerator.css'; // Your styles here\nimport default_image from '../Assets/default_image.svg'; // Default image\n\nconst ImageGenerator = () => {\n    const [imageUrl, setImageUrl] = useState(default_image); // Set default image initially\n    const inputRef = useRef(null); // Reference to the input field\n\n    // Function to handle image generation using the new URL pattern\n    const imageGenerator = async () => {\n        const userPrompt = inputRef.current.value;\n\n        if (userPrompt === \"\") {\n            return; // Exit if input is empty\n        }\n\n        // Format the URL with the user's input\n        const generatedImageUrl = `https://image.pollinations.ai/prompt/${encodeURIComponent(userPrompt)}`;\n        \n        // Set the image URL to the one generated by the external service\n        setImageUrl(generatedImageUrl);\n    };\n\n    return (\n        <div className='ai-image-generator'>\n            <div className='header'>\n                AI Image <span>Generator</span>\n            </div>\n            <div className='imgLoading'>\n                <div className='image-loading'>\n                    <div className='image'>\n                        <img src={imageUrl} alt=\"Generated representation\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"search-box\">\n                <input\n                    type=\"text\"\n                    className='search-input'\n                    placeholder='Describe what you want to see'\n                    ref={inputRef}\n                />\n                <button className=\"generate-btn\" onClick={imageGenerator}>Generate</button> {/* Generate button */}\n            </div>\n        </div>\n    );\n}\n\nexport default ImageGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,sBAAsB,CAAC,CAAC;AAC/B,OAAOC,aAAa,MAAM,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAACE,aAAa,CAAC,CAAC,CAAC;EACzD,MAAMO,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE/B;EACA,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,UAAU,GAAGF,QAAQ,CAACG,OAAO,CAACC,KAAK;IAEzC,IAAIF,UAAU,KAAK,EAAE,EAAE;MACnB,OAAO,CAAC;IACZ;;IAEA;IACA,MAAMG,iBAAiB,GAAG,wCAAwCC,kBAAkB,CAACJ,UAAU,CAAC,EAAE;;IAElG;IACAH,WAAW,CAACM,iBAAiB,CAAC;EAClC,CAAC;EAED,oBACIV,OAAA;IAAKY,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/Bb,OAAA;MAAKY,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,WACX,eAAAb,OAAA;QAAAa,QAAA,EAAM;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACNjB,OAAA;MAAKY,SAAS,EAAC,YAAY;MAAAC,QAAA,eACvBb,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC1Bb,OAAA;UAAKY,SAAS,EAAC,OAAO;UAAAC,QAAA,eAClBb,OAAA;YAAKkB,GAAG,EAAEf,QAAS;YAACgB,GAAG,EAAC;UAA0B;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNjB,OAAA;MAAKY,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBb,OAAA;QACIoB,IAAI,EAAC,MAAM;QACXR,SAAS,EAAC,cAAc;QACxBS,WAAW,EAAC,+BAA+B;QAC3CC,GAAG,EAAEjB;MAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACFjB,OAAA;QAAQY,SAAS,EAAC,cAAc;QAACW,OAAO,EAAEjB,cAAe;QAAAO,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAf,EAAA,CA1CKD,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}